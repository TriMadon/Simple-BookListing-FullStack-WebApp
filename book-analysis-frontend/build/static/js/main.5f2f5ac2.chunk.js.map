{"version":3,"sources":["UserContext.js","components/login/Login.js","components/bookList/ReadOnlyRow.js","components/bookList/FixRequiredSelect.js","components/bookList/BookList.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","Login","setUser","useContext","_useState","useState","_useState2","Object","slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","errorMsg","setErrorMsg","_sendLoginRequest","asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","axios","post","then","response","console","log","data","localStorage","setItem","window","location","reload","status","t0","stop","apply","this","arguments","useUpdateEffect","alert","react_default","a","createElement","className","htmlFor","placeholder","type","id","value","onChange","target","onClick","_x","sendLoginRequest","ReadOnlyRow","_ref","book","handleDeleteClick","bookTitle","rating","totalReads","noop","FixRequiredSelect","state","_this","props","selectRef","setSelectRef","ref","actionMeta","setState","getValue","undefined","_this2","_this$props","SelectComponent","required","objectWithoutProperties","enableRequired","isDisabled","assign","tabIndex","autoComplete","style","opacity","width","height","position","onFocus","focus","React","Component","defaultProps","protoTypes","selectComponent","PropTypes","func","isRequired","bool","BookList","isLoading","setIsLoading","books","setBooks","getBooksFromDbByUsername","_getBooksFromDbByUsername","BookList_regeneratorRuntime","_callee3","_context3","result","catch","abrupt","sent","postBookToDB","_x2","_postBookToDB","_callee4","newBook","_context4","deleteBookFromDB","_x3","_deleteBookFromDB","_callee5","_context5","_handleAddFormSubmit","_callee6","_context6","uuid","getItem","item","valueOf","querySelector","duplicateBook","find","newBooks","concat","toConsumableArray","map","objectSpread","useEffect","currentLoggedUser","fetchedBooks","document","getElementById","innerHTML","loadInfo","_ref2","_callee2","bookId","index","_context2","findIndex","splice","_x5","_handleLogOut","_callee7","_context7","removeItem","options","label","Select","bookList_FixRequiredSelect","BaseSelect","Button","_x6","handleLogOut","onSubmit","_x4","handleAddFormSubmit","isSearchable","name","getOptionLabel","getOptionValue","defaultValue","filter","option","min","max","role","Table","Fragment","key","bookList_ReadOnlyRow","App","user","useMemo","dist","Provider","react_router_dist","path","element","Login_Login","BookList_BookList","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","createRoot","render","react","src_App_0"],"mappings":"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","file":"static/js/main.5f2f5ac2.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext(null);\r\n\r\n","import React, {useContext, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {UserContext} from \"../../UserContext\";\r\nimport \"./login.css\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport {useUpdateEffect} from \"react-use\";\r\n\r\nexport const Login = () => {\r\n    const {setUser} = useContext(UserContext);\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n\r\n\r\n    useUpdateEffect(() => {\r\n        window.alert(errorMsg);\r\n    }, [errorMsg]);\r\n\r\n\r\n    async function sendLoginRequest(e) {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            await axios.post('http://localhost:8082/auth', {\r\n                username: username,\r\n                password: password\r\n            }).then((response) => {\r\n                console.log(response.data);\r\n                if (response.data === 200) {\r\n                    console.log(\"logged in successfully\");\r\n                    setUser(username);\r\n                    localStorage.setItem('logged_user', username);\r\n                    window.location.reload();\r\n                } else if (response.status === 401 || response.status === 403 || response.data === 404) {\r\n                    setErrorMsg(\"Invalid username or password\");\r\n                } else {\r\n                    setErrorMsg(\"Something went wrong, try again later...\");\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.log(`error: `, error)\r\n        }\r\n    }\r\n    return (\r\n        <div className={\"Auth-form-container\"}>\r\n            <form className={\"Auth-form\"}>\r\n                <div className={\"Auth-form-content\"}>\r\n                    <h3 className=\"Auth-form-title\">Log In</h3>\r\n                    <div className=\"form-group mt-3\">\r\n                        <label htmlFor={username}> Username:</label>\r\n                        <input placeholder={\"Enter Username\"}\r\n                               className={\"form-control mt-1\"}\r\n                               type={\"text\"}\r\n                               id={\"username\"}\r\n                               value={username}\r\n                               onChange={(e) => setUsername(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group mt-3\">\r\n                        <label htmlFor={password}> Password:</label>\r\n                        <input placeholder={\"Enter password\"}\r\n                               className={\"form-control mt-1\"}\r\n                               type={\"password\"} id={\"password\"}\r\n                               value={password}\r\n                               onChange={(e) => setPassword(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"d-grid gap-2 mt-3\">\r\n                        <button className={\"btn btn-primary\"} type={\"submit\"} onClick={(e) => sendLoginRequest(e)}> Submit </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\n\nconst ReadOnlyRow = ({ book, handleDeleteClick }) => {\n  return (\n    <tr>\n      <td>{book.bookTitle}</td>\n      <td>{book.rating}</td>\n      <td>{book.totalReads}</td>\n      <td>\n        <button type=\"button\" onClick={() => handleDeleteClick(book.id)}>\n          Delete\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default ReadOnlyRow;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst noop = () => {\r\n    // no operation (do nothing real quick)\r\n};\r\n\r\nclass FixRequiredSelect extends React.Component {\r\n    state = {\r\n        value: this.props.value || \"\"\r\n    };\r\n\r\n    selectRef = null;\r\n    setSelectRef = ref => {\r\n        this.selectRef = ref;\r\n    };\r\n\r\n    onChange = (value, actionMeta) => {\r\n        this.props.onChange(value, actionMeta);\r\n        this.setState({ value });\r\n    };\r\n\r\n    getValue = () => {\r\n        if (this.props.value !== undefined) return this.props.value;\r\n        return this.state.value || \"\";\r\n    };\r\n\r\n    render() {\r\n        const { SelectComponent, required, ...props } = this.props;\r\n        const {isDisabled } = this.props;\r\n        const enableRequired = !isDisabled;\r\n\r\n        return (\r\n            <div>\r\n                <SelectComponent\r\n                    {...props}\r\n                    ref={this.setSelectRef}\r\n                    onChange={this.onChange}\r\n                />\r\n                {enableRequired && (\r\n                    <input\r\n                        tabIndex={-1}\r\n                        autoComplete=\"off\"\r\n                        style={{\r\n                            opacity: 0,\r\n                            width: \"100%\",\r\n                            height: 0,\r\n                            position: \"absolute\"\r\n                        }}\r\n                        value={this.getValue()}\r\n                        onChange={noop}\r\n                        onFocus={() => this.selectRef.focus()}\r\n                        required={required}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFixRequiredSelect.defaultProps = {\r\n    onChange: noop\r\n};\r\n\r\nFixRequiredSelect.protoTypes = {\r\n    // react-select component class (e.g. Select, Creatable, Async)\r\n    selectComponent: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func,\r\n    required: PropTypes.bool\r\n};\r\n\r\nexport default FixRequiredSelect;\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport ReadOnlyRow from \"./ReadOnlyRow\";\r\nimport \"./BookList.css\";\r\nimport {v1 as uuid} from \"uuid\";\r\nimport {UserContext} from \"../../UserContext\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {Button, Table} from \"react-bootstrap\";\r\nimport BaseSelect from \"react-select\";\r\nimport FixRequiredSelect from \"./FixRequiredSelect\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const BookList = () => {\r\n    const {setUser} = useContext(UserContext);\r\n    const [isLoading, setIsLoading]= useState(false);\r\n    const [books, setBooks] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const loadInfo = async () => {\r\n            setIsLoading(true);\r\n            const currentLoggedUser = localStorage.getItem('logged_user');\r\n            document.getElementById(\"welcomeMessage\").innerHTML = \"Welcome back! \" + currentLoggedUser + \", add books to your list\";\r\n            // getBooksFromDbByUsername(currentLoggedUser).then(() => {\r\n            //     localStorage.setItem('books', JSON.stringify(books));\r\n            // })\r\n            const fetchedBooks = await getBooksFromDbByUsername(currentLoggedUser);\r\n            setBooks(fetchedBooks);\r\n            setIsLoading(false);\r\n        };\r\n        loadInfo();\r\n    }, []);\r\n\r\n    async function getBooksFromDbByUsername(username) {\r\n        return await axios.post(\"http://localhost:3001/api/get\", {username: username}).then((result) => {\r\n            return result.data;\r\n        }).catch((e) => {\r\n            console.log(e)\r\n            window.alert(\"Failed to fetch books from database, please try refreshing later\")\r\n            return [];\r\n        });\r\n    }\r\n\r\n    async function postBookToDB(newBook) {\r\n        try {\r\n            const response = await axios.post(\"http://localhost:3001/api/insert\", newBook);\r\n            console.log(response);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async function deleteBookFromDB(book) {\r\n        try {\r\n            const response = await axios.post(\"http://localhost:3001/api/delete\", book);\r\n            console.log(response);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async function handleAddFormSubmit(e) {\r\n        const newBook = {\r\n            id: uuid(),\r\n            username: localStorage.getItem('logged_user'),\r\n            bookTitle: item.valueOf(),\r\n            rating: e.target.querySelector('.rating').value,\r\n            totalReads: e.target.querySelector('.totalReads').value,\r\n        };\r\n\r\n        postBookToDB(newBook).then(() => {\r\n            const duplicateBook = books.find(book => book.bookTitle === newBook.bookTitle &&\r\n                book.username === newBook.username);\r\n            if (duplicateBook === undefined) {\r\n                const newBooks = [...books, newBook];\r\n                setBooks(newBooks);\r\n            } else {\r\n                const newBooks = books.map(book => {\r\n                    if (book === duplicateBook) {\r\n                        return {...book, rating: newBook.rating, totalReads: newBook.totalReads};\r\n                    }\r\n                    return book;\r\n                });\r\n                setBooks(newBooks);\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleDeleteClick = async (bookId) => {\r\n        const newBooks = [...books];\r\n\r\n        const index = books.findIndex((book) => book.id === bookId);\r\n\r\n        deleteBookFromDB(books[index]).then(() => {\r\n            newBooks.splice(index, 1);\r\n            setBooks(newBooks);\r\n        });\r\n    };\r\n\r\n\r\n    async function handleLogOut(e) {\r\n        e.preventDefault();\r\n        setUser(null);\r\n        localStorage.removeItem('logged_user');\r\n        window.location.reload();\r\n    }\r\n\r\n    const options = [\r\n        {label: \"The Alchemist\", value: \"The Alchemist\"},\r\n        {label: \"12 Rules For Life\", value: \"12 Rules For Life\"},\r\n        {label: \"A Mind For Numbers\", value: \"A Mind For Numbers\"},\r\n        {label: \"The Power Of Now\", value: \"The Power Of Now\"},\r\n        {label: \"The Happiness Equation\", value: \"The Happiness Equation\"},\r\n        {label: \"The Art Of War\", value: \"The Art Of War\"},\r\n        {label: \"Crime And Punishment\", value: \"Crime And Punishment\"},\r\n        {label: \"Atomic Habits\", value: \"Atomic Habits\"}\r\n    ];\r\n\r\n    const [item, setItem] = useState(\"\")\r\n\r\n    const handleChange = (item) => {\r\n        setItem(item.value);\r\n    };\r\n\r\n    const Select = props => (\r\n        <FixRequiredSelect\r\n            {...props}\r\n            SelectComponent={BaseSelect}\r\n            options={options}\r\n        />\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            <span id={\"welcomeMessage\"}></span>\r\n            <form><Button id={'logout'} onClick={(e) => handleLogOut(e)}> Log out </Button></form>\r\n            <form id={'inputForm'} onSubmit={(e) => handleAddFormSubmit(e)}>\r\n                <Select\r\n                    isSearchable={true}\r\n                    name=\"bookTitle\"\r\n                    id={\"bookTitles\"}\r\n                    getOptionLabel={(item) => item.value}\r\n                    getOptionValue={(item) => item.value}\r\n                    className={'bookTitle'}\r\n                    required\r\n                    placeholder=\"Choose a book...\"\r\n                    options={options}\r\n                    onChange={handleChange}\r\n                    defaultValue={{label: \"The Alchemist\", value: \"The Alchemist\"}}\r\n                    value={options.filter(function (option) {\r\n                        return option.value === item;\r\n                    })}\r\n                />\r\n                <input\r\n                    id={\"ratingBox\"}\r\n                    type=\"number\"\r\n                    min={1}\r\n                    max={10}\r\n                    name=\"rating\"\r\n                    className={'rating'}\r\n                    required=\"required\"\r\n                    placeholder=\"Rating(1-10)\"\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    min={0}\r\n                    name=\"totalReads\"\r\n                    className={'totalReads'}\r\n                    required=\"required\"\r\n                    placeholder=\"Total reads...\"\r\n                />\r\n                <Button type=\"submit\">Add Book</Button>\r\n            </form>\r\n            <form>\r\n                { isLoading? (\r\n                    <div id={\"loading\"} className=\"d-flex justify-content-center\">\r\n                        <div className=\"spinner-border\" role=\"status\">\r\n                            <span className=\"sr-only\"></span>\r\n                        </div>\r\n                    </div>\r\n                    ) : (\r\n                <Table>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Book Title</th>\r\n                        <th>Rating</th>\r\n                        <th>Total Reads</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {books.map((book) => (\r\n                        <React.Fragment key={book.id}>\r\n                            {(\r\n                                <ReadOnlyRow\r\n                                    book={book}\r\n                                    handleDeleteClick={handleDeleteClick}\r\n                                />\r\n                            )}\r\n                        </React.Fragment>\r\n                    ))}\r\n                    </tbody>\r\n                </Table> )\r\n                    }\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useMemo, useState} from \"react\";\nimport {Login} from \"./components/login/Login\";\nimport {BookList} from \"./components/bookList/BookList\";\nimport {BrowserRouter, Route, Routes} from \"react-router-dom\";\nimport {UserContext} from \"./UserContext\";\nimport './App.css'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\n\nconst App = () => {\n    const [user, setUser] = useState(()=>\n        localStorage.getItem('logged_user')\n    );\n\n    const value = useMemo(() => ({user, setUser}), [user, setUser]);\n\n    return (\n      <BrowserRouter>\n          <div id=\"colorStrip\">\n              <div className=\"container\">\n                  <h1 className=\"display-3\">Book Listing App</h1>\n              </div>\n          </div>\n          <UserContext.Provider value={value}>\n              <Routes>\n                  <Route path={\"/\"} element={localStorage.getItem(\"logged_user\") === null? <Login /> : <BookList/>} />\n              </Routes>\n          </UserContext.Provider>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport {StrictMode} from \"react\";\nimport { createRoot } from 'react-dom/client'\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\n\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n);\n\nreportWebVitals();\n\n"],"sourceRoot":""}